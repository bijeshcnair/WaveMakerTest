/*Copyright (c) 2017-2018 vanenburgsoftware.com All Rights Reserved.
 This software is the confidential and proprietary information of vanenburgsoftware.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with vanenburgsoftware.com*/
package com.testloginapp.hoursaccont1;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

/**
 * HoursLogged generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`HoursLogged`")
public class HoursLogged implements Serializable {

    private Integer id;
    private Integer emplId;
    private Integer department;
    @Type(type = "DateTime")
    private LocalDateTime hfrom;
    @Type(type = "DateTime")
    private LocalDateTime hto;
    private String status;
    private Integer managerId;
    private Department departmentByDepartment;
    private Employee employeeByEmplId;
    private Employee employeeByManagerId;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`EmplID`", nullable = true, scale = 0, precision = 10)
    public Integer getEmplId() {
        return this.emplId;
    }

    public void setEmplId(Integer emplId) {
        this.emplId = emplId;
    }

    @Column(name = "`Department`", nullable = true, scale = 0, precision = 10)
    public Integer getDepartment() {
        return this.department;
    }

    public void setDepartment(Integer department) {
        this.department = department;
    }

    @Column(name = "`HFrom`", nullable = true)
    public LocalDateTime getHfrom() {
        return this.hfrom;
    }

    public void setHfrom(LocalDateTime hfrom) {
        this.hfrom = hfrom;
    }

    @Column(name = "`HTo`", nullable = true)
    public LocalDateTime getHto() {
        return this.hto;
    }

    public void setHto(LocalDateTime hto) {
        this.hto = hto;
    }

    @Column(name = "`Status`", nullable = true, length = 255)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "`ManagerID`", nullable = true, scale = 0, precision = 10)
    public Integer getManagerId() {
        return this.managerId;
    }

    public void setManagerId(Integer managerId) {
        this.managerId = managerId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`Department`", referencedColumnName = "`DeptID`", insertable = false, updatable = false)
    public Department getDepartmentByDepartment() {
        return this.departmentByDepartment;
    }

    public void setDepartmentByDepartment(Department departmentByDepartment) {
        if(departmentByDepartment != null) {
            this.department = departmentByDepartment.getDeptId();
        }

        this.departmentByDepartment = departmentByDepartment;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`EmplID`", referencedColumnName = "`EmplID`", insertable = false, updatable = false)
    public Employee getEmployeeByEmplId() {
        return this.employeeByEmplId;
    }

    public void setEmployeeByEmplId(Employee employeeByEmplId) {
        if(employeeByEmplId != null) {
            this.emplId = employeeByEmplId.getEmplId();
        }

        this.employeeByEmplId = employeeByEmplId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ManagerID`", referencedColumnName = "`EmplID`", insertable = false, updatable = false)
    public Employee getEmployeeByManagerId() {
        return this.employeeByManagerId;
    }

    public void setEmployeeByManagerId(Employee employeeByManagerId) {
        if(employeeByManagerId != null) {
            this.managerId = employeeByManagerId.getEmplId();
        }

        this.employeeByManagerId = employeeByManagerId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof HoursLogged)) return false;
        final HoursLogged hoursLogged = (HoursLogged) o;
        return Objects.equals(getId(), hoursLogged.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

